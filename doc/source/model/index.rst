Segway Model
============

Physical Model
--------------

The *Segway* can be represented by the model of an inverted pendulum mounted on a
cart as shown below;

Missing image


Where,

* :math:`m` is the mass of the entire *Segway*
* :math:`l` is the length of the bar and is given by

 .. math::
   l = H/2

 Where, :math:`H` is the height of the *Segway*
* :math:`F` is the force generated by the motors of the *Segway*

.. note::
Note the reference frame used, :math:`\theta` is rotating clockwise and
:math:`x` changes from left to right.

To the develop the model of our *Segway* we took the following assumptions;

* The cart is just a model artifact.
* The cart has no mass.
* The hight of the cart is neglected.
* The bar is unbendable. This is so because the Zumo32U4 is actually unbendable.
* The mass :math:`m` is punctual and represents the *Segway*'s center of mass.
* The mass :math:`m` represents the mass of the entire *Segway*.

The analysis of the model is separated in, first, rotational analysis and then
linear analysis. A model will be the output of each analysis. Finally both
models are combined together to have the transfer function of our *Segway*.

.. note::
   Literal values are preferred and numerical values are used only when needed.
   Also vector notation is avoided for simplicity.


Rotational Dynamics
+++++++++++++++++++

In this section the rotational dynamics of the system are analyzed. Every
rotational component is analyzed independently and combined together afterwards.

Rotational Inertia moment component
***********************************

The generic formula for the torque caused by the rotational inertia is as
follows;

.. math::
  \tau_J = J\ddot{\theta}

Where, :math:`J` is the rotational inertial momentum and can be calculated as
follows;

.. math::
  J = ml^2

Gravitational component
***********************

Gravity is also interacting with our system introducing also a torque. The
gravity is interacting with our system as shown in the image below;

Missing image

It can be seen that the gravitation force can be expressed as;

.. math::
  \vec{W} = mg(\vec{u_{ten}} + \vec{u_{tan}})

.. note::
  :math:`g` is the gravitation constant of the earth.

Where, \vec{u_{ten}} is the unitary vector in the direction of the tension
and \vec{u_{tan}} is the unitary vector in the tangential direction.

In our case what is actually needed is the projection of the weight in the
tangential direction as follows;

.. math::
  W_{tan} = mg\sin(\theta)

Applying the lever arm principle we can obtain the torque that the gravitational
force is introducing to our system. This torque is shown below;

.. math::
  \tau_g = lW_{tan} = lmg\sin(\theta)

Motor's Force component
***********************

The force generated by the motors acting on the base of the bar is equivalent
to an opposite force on the top of the bar. This is shown in the image below;

Image missing

Again we analyze this force an it's components and obtain;

.. math::
  \vec{F} = F(\vec{u_{ten}} + \vec{u_{tan}})

Using the lever arm principle and the tangential projection of the force we
obtain that the torque generated by this force is;

.. math::
  \tau_F = lF_{tan} = lF\cos(\theta)

Momentum Conservation
*********************

Using the reference frame provided we can proceed to add all torques together.
The direction of the Torques are shown in the following image;

Image missing

Finally the sum of all torques is;

.. math::
  \tau_g - \tau_J - \tau_F = 0

  mg\sin(\theta) - lm\ddot{\theta} - F\cos(\theta) = 0

From here we can already have a transfer function in terms of :math:`F` as the
input. Using the approximations;

* :math:`\sin(\theta) = \theta`
* :math:`\cos(\theta) = 1`

.. note::
  Both approximations are based on the Taylor series expansion centered at 0.
  For :math:`\theta \rightarrow 0` in other words if the angle is really small
  the approximation can be trusted.

Then we can obtain the transfer function;

.. math::
  H_r(s) = \frac{\Theta(s)}{F(s)} = \frac{1}{mg - lms^s}

.. note::
  The rotational friction is neglected because we are assuming that the bar is
  unbendable, which is a valid assumption for our system.


Linear Dynamics
+++++++++++++++

Let :math:`F` be the input force for our system.

Linear Momentum component
*************************
Considering the linear momentum we have that;

.. math::
  F_m = m \ddot{x}

Friction component
******************

And now considering the friction static coefficient;

.. math::
  F_b = b \dot{x}

Sum of Forces
*************

According to our reference frame we have the direction of the forces as follows;

Image missing

Adding everything together taking care about the signs we have;

.. math::
  F - m\ddot{x} - b\dot{x} = 0

Since in our system the motors already provide an API to control their speed
we can do the following variable substitution;

.. math::
  K_sv = \dot{x}

  F - mK_s \dot{v} - bK_sv = 0

Where, :math:`K_s` is the linear constant that relates the values set to the
`setMotors(left, right)` API funciton and the linear speed.


.. note::

  :math:`K_s` will be obtained experimentally. And also it's linearity was
  verified.

And finally we can get the transfer function;

.. math::
  H_l(s) = \frac{F(s)}{V(s)} = K_s(ms + b)

General Transfer Function
+++++++++++++++++++++++++

Combining both transfer function we have;

.. math::
  H(s) = H_r(s)H_l(s) = \frac{-K_s(ms + b)}{lms^2 - mg}

  H(s) = \frac{-K_s(s + b/m)}{ls^2 -g}


Physical values
+++++++++++++++

Mass
****

The mass was measured using a kitchen scale. The obtained value is shown below;

.. math::
  m = 0.242 g

.. note::
  This weight includes the weight of:
    * Batteries
    * Zumo32U4
    * Bluetooth module HC-05
    * Cables


Height
******

The height was measured with a standard ruler and the value is shown below;

.. math::
  H = 0.0846 m

Then we can obtain :math:`l` as follows;

.. math::
  l = H/2 = 0.0423 m

Motor speed constant
********************

To measure the constant that relates the speed set to the motor with the actual
linear speed we set up an experiment with a flat surface and two marks
:math:`1.6m` away from each other. With a fixed camera we recorded the
trajectory of the Zumo32U4 at different speeds. We analyzed the videos offline,
measuring the time to travel from one mark to the other. The time was measured
with frame precision out of the 30fps videos. With this time we calculated the
linear speed for the different speeds set to the motors.

The experiment gave us important results listed bellow;

* There was an important deviation from the speed of the left and right motors
  (using the same value). The calculated deviation was around 15%, meaning that
  the right motor was approximately 15% faster that left motor.
* The deviation mentioned before was also related to the battery level
  difference, but were not the only cause.
* There's a dead zone between :math:`-45` and :math:`45` of values that can be
  set to the motors that generate no linear movement.
* :math:`K_s = (0.012 \pm 0.005) m/s` for values from 45 to 400 and from -400
  to -45.
* :math:`K_s` depends strongly on the batter level.
